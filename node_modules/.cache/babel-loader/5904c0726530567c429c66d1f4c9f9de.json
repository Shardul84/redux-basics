{"ast":null,"code":"var _jsxFileName = \"/Users/shardulbhokare/Documents/untitled folder/redux/src/components/UserContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers as _fetchUsers } from \"../redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersContainer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var userData = _ref.userData,\n      fetchUsers = _ref.fetchUsers;\n  useEffect(function () {\n    fetchUsers();\n  }, []);\n  return userData.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this) : userData.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: userData.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData && userData.users && userData.users.map(function (user) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 40\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UsersContainer;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchUsers: function fetchUsers() {\n      return dispatch(_fetchUsers());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersContainer\");","map":{"version":3,"sources":["/Users/shardulbhokare/Documents/untitled folder/redux/src/components/UserContainer.js"],"names":["React","useEffect","connect","fetchUsers","UsersContainer","userData","loading","error","users","map","user","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAVA,WAAT,QAA2B,UAA3B;;;AAEA,SAASC,cAAT,OAAkD;AAAA;;AAAA;;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdF,UAAc,QAAdA,UAAc;AAChDF,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOE,QAAQ,CAACC,OAAT,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAEHD,QAAQ,CAACE,KAAT,gBACF;AAAA,cAAKF,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,UADE,gBAGF;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGF,QAAQ,IACPA,QAAQ,CAACG,KADV,IAECH,QAAQ,CAACG,KAAT,CAAeC,GAAf,CAAmB,UAACC,IAAD;AAAA,4BAAU;AAAA,oBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,iBAAV;AAAA,OAAnB;AAHJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UALF;AAcD;;GAlBQP,c;;KAAAA,c;;AAoBT,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLR,IAAAA,QAAQ,EAAEQ,KAAK,CAACH;AADX,GAAP;AAGD,CAJD;;AAMA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLZ,IAAAA,UAAU,EAAE;AAAA,aAAMY,QAAQ,CAACZ,WAAU,EAAX,CAAd;AAAA;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CAACU,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,cAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../redux\";\n\nfunction UsersContainer({ userData, fetchUsers }) {\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return userData.loading ? (\n    <h2>Loading</h2>\n  ) : userData.error ? (\n    <h2>{userData.error}</h2>\n  ) : (\n    <div>\n      <h2>Users List</h2>\n      <div>\n        {userData &&\n          userData.users &&\n          userData.users.map((user) => <p>{user.name}</p>)}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\n"]},"metadata":{},"sourceType":"module"}